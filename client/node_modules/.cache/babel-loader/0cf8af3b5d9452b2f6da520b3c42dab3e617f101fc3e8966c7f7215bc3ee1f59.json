{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utsav\\\\OneDrive\\\\Desktop\\\\TATA_TRACEABILITY\\\\TML\\\\client\\\\src\\\\components\\\\VF3_ClutchFillingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF3_ClutchFillingForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    Date_Time: \"\",\n    CT_VIN: \"\",\n    CT_VC: \"\",\n    CT_Pressure_Build_Actual: \"\",\n    CT_Pressure_Stable_Actual: \"\",\n    CT_Pressure_Leak_Actual: \"\",\n    CT_COA_Vacuum_Actual: \"\",\n    CT_Fine_Vacuum_Actual: \"\",\n    CT_Vacuum_Actual: \"\",\n    CT_Vacuum_Leak_Actual: \"\",\n    CT_Filling_Volume_Actual: \"\",\n    CT_Filling_Pressure_Actual: \"\",\n    CT_Delta_Pressure_Actual: \"\",\n    CT_Oil_Fill_Pressure_Actual: \"\",\n    CT_Air_Vent_Actual: \"\",\n    CT_Process_Time: \"\",\n    CT_Result: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:5000/api/Clutch_Process_vf3\", formData);\n      alert(\"VF3 Clutch Filling submitted successfully\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Submission failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"VF3 - Clutch Filling Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.entries(formData).map(([key, val]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: key,\n          value: val,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(VF3_ClutchFillingForm, \"rXsrDjZZ0uYylFcwhCoLyyEi0y8=\");\n_c = VF3_ClutchFillingForm;\nexport default VF3_ClutchFillingForm;\nvar _c;\n$RefreshReg$(_c, \"VF3_ClutchFillingForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VF3_ClutchFillingForm","_s","formData","setFormData","Date_Time","CT_VIN","CT_VC","CT_Pressure_Build_Actual","CT_Pressure_Stable_Actual","CT_Pressure_Leak_Actual","CT_COA_Vacuum_Actual","CT_Fine_Vacuum_Actual","CT_Vacuum_Actual","CT_Vacuum_Leak_Actual","CT_Filling_Volume_Actual","CT_Filling_Pressure_Actual","CT_Delta_Pressure_Actual","CT_Oil_Fill_Pressure_Actual","CT_Air_Vent_Actual","CT_Process_Time","CT_Result","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","post","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","entries","map","key","val","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/utsav/OneDrive/Desktop/TATA_TRACEABILITY/TML/client/src/components/VF3_ClutchFillingForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst VF3_ClutchFillingForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    Date_Time: \"\",\r\n    CT_VIN: \"\",\r\n    CT_VC: \"\",\r\n    CT_Pressure_Build_Actual: \"\",\r\n    CT_Pressure_Stable_Actual: \"\",\r\n    CT_Pressure_Leak_Actual: \"\",\r\n    CT_COA_Vacuum_Actual: \"\",\r\n    CT_Fine_Vacuum_Actual: \"\",\r\n    CT_Vacuum_Actual: \"\",\r\n    CT_Vacuum_Leak_Actual: \"\",\r\n    CT_Filling_Volume_Actual: \"\",\r\n    CT_Filling_Pressure_Actual: \"\",\r\n    CT_Delta_Pressure_Actual: \"\",\r\n    CT_Oil_Fill_Pressure_Actual: \"\",\r\n    CT_Air_Vent_Actual: \"\",\r\n    CT_Process_Time: \"\",\r\n    CT_Result: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\r\n        \"http://localhost:5000/api/Clutch_Process_vf3\",\r\n        formData\r\n      );\r\n      alert(\"VF3 Clutch Filling submitted successfully\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Submission failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>VF3 - Clutch Filling Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {Object.entries(formData).map(([key, val]) => (\r\n          <div key={key}>\r\n            <label>{key}</label>\r\n            <input\r\n              type=\"text\"\r\n              name={key}\r\n              value={val}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VF3_ClutchFillingForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}