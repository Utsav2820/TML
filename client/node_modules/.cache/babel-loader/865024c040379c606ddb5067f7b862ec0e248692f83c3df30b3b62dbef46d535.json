{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{BrowserRouter as Router,Routes,Route,useNavigate}from\"react-router-dom\";import axios from\"axios\";import FormPage from\"./pages/FormPage\";// Keep this import for the dynamic form page\n// Logos (assuming these paths are correct relative to App.js)\nimport tataLogo from\"./assets/Tata-logo.png\";import tataQuoteLogo from\"./assets/tata_quote_logo.png\";import tataItLogo from\"./assets/tata_it_logo.png\";// --- IMPORTANT: NO BACKEND MODULES (mysql2, express, dotenv, cors, fs, path, etc.) ARE IMPORTED HERE ---\n// These modules belong ONLY in your backend (server.js)\n// Dashboard component - This handles the factory and machine selection\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[factories,setFactories]=useState([]);const[machines,setMachines]=useState([]);const[selectedFactory,setSelectedFactory]=useState(\"\");const[selectedMachine,setSelectedMachine]=useState(\"\");const navigate=useNavigate();// Hook for programmatic navigation\n// Fetch factories on component mount\nuseEffect(()=>{axios.get(\"http://localhost:5000/api/factories\").then(res=>{setFactories(res.data);}).catch(error=>{console.error(\"Error fetching factories:\",error);alert(\"Failed to load factories. Please check the server connection.\");});},[]);// Fetch machines when selectedFactory changes\nuseEffect(()=>{if(selectedFactory){axios.get(`http://localhost:5000/api/machines/${selectedFactory}`).then(res=>{setMachines(res.data);}).catch(error=>{console.error(`Error fetching machines for factory ${selectedFactory}:`,error);alert(\"Failed to load machines. Please try again.\");});}else{setMachines([]);// Clear machines if no factory is selected\n}},[selectedFactory]);// Handler for the submit button\nconst handleSubmit=()=>{var _factories$find;if(!selectedFactory||!selectedMachine){alert(\"Please select both Factory and Machine.\");return;}// Find the name of the selected factory (e.g., \"VEHICLE FACTORY 1\")\nconst factoryName=(_factories$find=factories.find(f=>f.id===parseInt(selectedFactory)))===null||_factories$find===void 0?void 0:_factories$find.name;if(!factoryName){alert(\"Selected factory not found. Please refresh.\");return;}// Correctly extract the \"VFx\" part (e.g., \"VEHICLE FACTORY 1\" -> \"VF1\")\nconst areaParts=factoryName.split(\" \");const area=`VF${areaParts[2]}`;// The 'machine' string MUST match the second part of the keys in FormPage's formComponentMap\nconst machine=selectedMachine;// e.g., \"AC FILLING MACHINE\"\n// Navigate to the generic FormPage, passing the 'area' and 'machine' as state.\nnavigate(\"/form\",{state:{area,machine}});};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-[#e6f0f8] text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-[1400px] min-h-screen mx-auto bg-[#212122] shadow-lg flex flex-col overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"bg-[#053971] px-6 py-4 flex justify-between items-center shadow-md\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl md:text-2xl font-bold\",children:\"TATA MOTORS\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm md:text-base opacity-90 -mt-1\",children:\"Connecting Aspirations\"})]}),/*#__PURE__*/_jsx(\"img\",{src:tataLogo,alt:\"Tata Logo\",className:\"h-[50px] md:h-[100px] bg-white rounded-md p-2 shadow-md\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 text-center py-3\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-white text-lg md:text-xl font-semibold\",children:\"VEHICLE DATA TRACEABILITY PORTAL\"})}),/*#__PURE__*/_jsxs(\"main\",{className:\"flex-grow flex flex-col items-center justify-center p-6 relative\",children:[/*#__PURE__*/_jsx(\"img\",{src:tataItLogo,alt:\"Watermark\",className:\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[300px] opacity-80 rounded-full pointer-events-none z-0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"z-10 flex flex-col md:flex-row gap-[400px] mt-10\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedFactory,onChange:e=>setSelectedFactory(e.target.value),className:\"w-72 bg-black text-white border-2 border-white px-4 py-3 rounded-md text-lg\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"SELECT FACTORY\"}),factories.map(factory=>/*#__PURE__*/_jsx(\"option\",{value:factory.id,children:factory.name},factory.id))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMachine,onChange:e=>setSelectedMachine(e.target.value),className:\"w-72 bg-black text-white border-2 border-white px-4 py-3 rounded-md text-lg\",disabled:!selectedFactory,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"SELECT MACHINE\"}),machines.map(machine=>/*#__PURE__*/_jsx(\"option\",{value:machine.name,children:machine.name},machine.id))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"z-10 mt-80\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"bg-blue-600 hover:bg-blue-700 text-white text-lg font-semibold px-6 py-3 rounded shadow mb-10\",children:\"SUBMIT\"})})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"text-center px-4 py-8\",children:/*#__PURE__*/_jsx(\"img\",{src:tataQuoteLogo,alt:\"Tata Quote\",className:\"w-full max-w-[90%] md:max-w-[40%] mx-auto\"})})]})});};// Routing Setup\nconst App=()=>{return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/form\",element:/*#__PURE__*/_jsx(FormPage,{})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","axios","FormPage","tataLogo","tataQuoteLogo","tataItLogo","jsx","_jsx","jsxs","_jsxs","Dashboard","factories","setFactories","machines","setMachines","selectedFactory","setSelectedFactory","selectedMachine","setSelectedMachine","navigate","get","then","res","data","catch","error","console","alert","handleSubmit","_factories$find","factoryName","find","f","id","parseInt","name","areaParts","split","area","machine","state","className","children","src","alt","value","onChange","e","target","map","factory","disabled","onClick","App","path","element"],"sources":["C:/Users/utsav/OneDrive/Desktop/TATA_TRACEABILITY/TML/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport FormPage from \"./pages/FormPage\"; // Keep this import for the dynamic form page\r\n\r\n// Logos (assuming these paths are correct relative to App.js)\r\nimport tataLogo from \"./assets/Tata-logo.png\";\r\nimport tataQuoteLogo from \"./assets/tata_quote_logo.png\";\r\nimport tataItLogo from \"./assets/tata_it_logo.png\";\r\n\r\n// --- IMPORTANT: NO BACKEND MODULES (mysql2, express, dotenv, cors, fs, path, etc.) ARE IMPORTED HERE ---\r\n// These modules belong ONLY in your backend (server.js)\r\n\r\n// Dashboard component - This handles the factory and machine selection\r\nconst Dashboard = () => {\r\n  const [factories, setFactories] = useState([]);\r\n  const [machines, setMachines] = useState([]);\r\n  const [selectedFactory, setSelectedFactory] = useState(\"\");\r\n  const [selectedMachine, setSelectedMachine] = useState(\"\");\r\n  const navigate = useNavigate(); // Hook for programmatic navigation\r\n\r\n  // Fetch factories on component mount\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/factories\")\r\n      .then((res) => {\r\n        setFactories(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching factories:\", error);\r\n        alert(\"Failed to load factories. Please check the server connection.\");\r\n      });\r\n  }, []);\r\n\r\n  // Fetch machines when selectedFactory changes\r\n  useEffect(() => {\r\n    if (selectedFactory) {\r\n      axios\r\n        .get(`http://localhost:5000/api/machines/${selectedFactory}`)\r\n        .then((res) => {\r\n          setMachines(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\r\n            `Error fetching machines for factory ${selectedFactory}:`,\r\n            error\r\n          );\r\n          alert(\"Failed to load machines. Please try again.\");\r\n        });\r\n    } else {\r\n      setMachines([]); // Clear machines if no factory is selected\r\n    }\r\n  }, [selectedFactory]);\r\n\r\n  // Handler for the submit button\r\n  const handleSubmit = () => {\r\n    if (!selectedFactory || !selectedMachine) {\r\n      alert(\"Please select both Factory and Machine.\");\r\n      return;\r\n    }\r\n\r\n    // Find the name of the selected factory (e.g., \"VEHICLE FACTORY 1\")\r\n    const factoryName = factories.find(\r\n      (f) => f.id === parseInt(selectedFactory)\r\n    )?.name;\r\n\r\n    if (!factoryName) {\r\n      alert(\"Selected factory not found. Please refresh.\");\r\n      return;\r\n    }\r\n\r\n    // Correctly extract the \"VFx\" part (e.g., \"VEHICLE FACTORY 1\" -> \"VF1\")\r\n    const areaParts = factoryName.split(\" \");\r\n    const area = `VF${areaParts[2]}`;\r\n\r\n    // The 'machine' string MUST match the second part of the keys in FormPage's formComponentMap\r\n    const machine = selectedMachine; // e.g., \"AC FILLING MACHINE\"\r\n\r\n    // Navigate to the generic FormPage, passing the 'area' and 'machine' as state.\r\n    navigate(\"/form\", { state: { area, machine } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-[#e6f0f8] text-white\">\r\n      <div className=\"w-full max-w-[1400px] min-h-screen mx-auto bg-[#212122] shadow-lg flex flex-col overflow-hidden\">\r\n        {/* Header - UI remains exactly the same */}\r\n        <header className=\"bg-[#053971] px-6 py-4 flex justify-between items-center shadow-md\">\r\n          <div>\r\n            <h1 className=\"text-xl md:text-2xl font-bold\">TATA MOTORS</h1>\r\n            <p className=\"text-sm md:text-base opacity-90 -mt-1\">\r\n              Connecting Aspirations\r\n            </p>\r\n          </div>\r\n          <img\r\n            src={tataLogo}\r\n            alt=\"Tata Logo\"\r\n            className=\"h-[50px] md:h-[100px] bg-white rounded-md p-2 shadow-md\"\r\n          />\r\n        </header>\r\n\r\n        {/* Title - UI remains exactly the same */}\r\n        <div className=\"bg-blue-600 text-center py-3\">\r\n          <h2 className=\"text-white text-lg md:text-xl font-semibold\">\r\n            VEHICLE DATA TRACEABILITY PORTAL\r\n          </h2>\r\n        </div>\r\n\r\n        {/* Main Content (Dropdowns and Button) - UI remains exactly the same */}\r\n        <main className=\"flex-grow flex flex-col items-center justify-center p-6 relative\">\r\n          {/* Watermark - UI remains exactly the same */}\r\n          <img\r\n            src={tataItLogo}\r\n            alt=\"Watermark\"\r\n            className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[300px] opacity-80 rounded-full pointer-events-none z-0\"\r\n          />\r\n\r\n          {/* Dropdowns - UI remains exactly the same */}\r\n          <div className=\"z-10 flex flex-col md:flex-row gap-[400px] mt-10\">\r\n            <select\r\n              value={selectedFactory}\r\n              onChange={(e) => setSelectedFactory(e.target.value)}\r\n              className=\"w-72 bg-black text-white border-2 border-white px-4 py-3 rounded-md text-lg\"\r\n            >\r\n              <option value=\"\">SELECT FACTORY</option>\r\n              {factories.map((factory) => (\r\n                <option key={factory.id} value={factory.id}>\r\n                  {factory.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select\r\n              value={selectedMachine}\r\n              onChange={(e) => setSelectedMachine(e.target.value)}\r\n              className=\"w-72 bg-black text-white border-2 border-white px-4 py-3 rounded-md text-lg\"\r\n              disabled={!selectedFactory}\r\n            >\r\n              <option value=\"\">SELECT MACHINE</option>\r\n              {machines.map((machine) => (\r\n                <option key={machine.id} value={machine.name}>\r\n                  {machine.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Submit Button - UI remains exactly the same */}\r\n          <div className=\"z-10 mt-80\">\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white text-lg font-semibold px-6 py-3 rounded shadow mb-10\"\r\n            >\r\n              SUBMIT\r\n            </button>\r\n          </div>\r\n        </main>\r\n\r\n        {/* Footer - UI remains exactly the same */}\r\n        <footer className=\"text-center px-4 py-8\">\r\n          <img\r\n            src={tataQuoteLogo}\r\n            alt=\"Tata Quote\"\r\n            className=\"w-full max-w-[90%] md:max-w-[40%] mx-auto\"\r\n          />\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Routing Setup\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Route for the Dashboard (Home page) */}\r\n        <Route path=\"/\" element={<Dashboard />} />\r\n        {/* Single dynamic route for FormPage */}\r\n        <Route path=\"/form\" element={<FormPage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}