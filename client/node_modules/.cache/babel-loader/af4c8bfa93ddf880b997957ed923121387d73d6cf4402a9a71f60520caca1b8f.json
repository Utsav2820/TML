{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utsav\\\\OneDrive\\\\Desktop\\\\TATA_TRACEABILITY\\\\TML\\\\client\\\\src\\\\components\\\\VF2_PowerSteeringForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF2_PowerSteeringForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    PS_VIN: \"\",\n    PS_VC: \"\",\n    PS_AIRING_ACTUAL: \"\",\n    PS_AIRING_LEAK_HOLD: \"\",\n    PS_AIRING_LEAK_ACTUAL: \"\",\n    PS_AIR_VENT_ACTUAL: \"\",\n    PS_VACUUM_ACTUAL: \"\",\n    PS_VACUUM_LEAK_ACTUAL: \"\",\n    PS_REVACUUM_ACTUAL: \"\",\n    PS_OIL_QTY_ACTUAL: \"\",\n    PS_OIL_PRESSURE_ACTUAL: \"\",\n    PS_DELTA_PRESSURE_ACTUAL: \"\",\n    PS_PROCESS_COMPLETE: \"\",\n    PS_CYCLE_TIME: \"\",\n    PS_RESULT: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:5000/api/Power_Steering_vf2\", formData);\n      alert(\"VF2 Power Steering data submitted successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Submission failed!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"VF2 - Power Steering Filling Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: key,\n          value: formData[key],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(VF2_PowerSteeringForm, \"kb4kEskEmwbZ2BMDKYczlcvhuKs=\");\n_c = VF2_PowerSteeringForm;\nexport default VF2_PowerSteeringForm;\nvar _c;\n$RefreshReg$(_c, \"VF2_PowerSteeringForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VF2_PowerSteeringForm","_s","formData","setFormData","PS_VIN","PS_VC","PS_AIRING_ACTUAL","PS_AIRING_LEAK_HOLD","PS_AIRING_LEAK_ACTUAL","PS_AIR_VENT_ACTUAL","PS_VACUUM_ACTUAL","PS_VACUUM_LEAK_ACTUAL","PS_REVACUUM_ACTUAL","PS_OIL_QTY_ACTUAL","PS_OIL_PRESSURE_ACTUAL","PS_DELTA_PRESSURE_ACTUAL","PS_PROCESS_COMPLETE","PS_CYCLE_TIME","PS_RESULT","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","post","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/utsav/OneDrive/Desktop/TATA_TRACEABILITY/TML/client/src/components/VF2_PowerSteeringForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst VF2_PowerSteeringForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    PS_VIN: \"\",\r\n    PS_VC: \"\",\r\n    PS_AIRING_ACTUAL: \"\",\r\n    PS_AIRING_LEAK_HOLD: \"\",\r\n    PS_AIRING_LEAK_ACTUAL: \"\",\r\n    PS_AIR_VENT_ACTUAL: \"\",\r\n    PS_VACUUM_ACTUAL: \"\",\r\n    PS_VACUUM_LEAK_ACTUAL: \"\",\r\n    PS_REVACUUM_ACTUAL: \"\",\r\n    PS_OIL_QTY_ACTUAL: \"\",\r\n    PS_OIL_PRESSURE_ACTUAL: \"\",\r\n    PS_DELTA_PRESSURE_ACTUAL: \"\",\r\n    PS_PROCESS_COMPLETE: \"\",\r\n    PS_CYCLE_TIME: \"\",\r\n    PS_RESULT: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\r\n        \"http://localhost:5000/api/Power_Steering_vf2\",\r\n        formData\r\n      );\r\n      alert(\"VF2 Power Steering data submitted successfully!\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Submission failed!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>VF2 - Power Steering Filling Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {Object.keys(formData).map((key) => (\r\n          <div key={key}>\r\n            <label>{key}</label>\r\n            <input\r\n              type=\"text\"\r\n              name={key}\r\n              value={formData[key]}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VF2_PowerSteeringForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}