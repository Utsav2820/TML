{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utsav\\\\OneDrive\\\\Desktop\\\\TATA_TRACEABILITY\\\\TML\\\\client\\\\src\\\\components\\\\VF2_ClutchFillingForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF2_ClutchFillingForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    Date_Time: \"\",\n    CT_VIN: \"\",\n    CT_VC: \"\",\n    CT_Pressure_Build_Actual: \"\",\n    CT_Pressure_Stable_Actual: \"\",\n    CT_Pressure_Leak_Actual: \"\",\n    CT_COA_Vacuum_Actual: \"\",\n    CT_Fine_Vacuum_Actual: \"\",\n    CT_Vacuum_Actual: \"\",\n    CT_Vacuum_Leak_Actual: \"\",\n    CT_Filling_Volume_Actual: \"\",\n    CT_Filling_Pressure_Actual: \"\",\n    CT_Delta_Pressure_Actual: \"\",\n    CT_Oil_Fill_Pressure_Actual: \"\",\n    CT_Air_Vent_Actual: \"\",\n    CT_Process_Time: \"\",\n    CT_Result: \"\"\n  });\n  const handleChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"/api/vf2-clutch-filling\", formData);\n      alert(\"VF2 Clutch Oil Filling data submitted!\");\n    } catch (error) {\n      alert(\"Submission failed.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"p-4 bg-white rounded shadow-md space-y-3 w-full max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"VF2 - Clutch Oil Filling Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), Object.keys(formData).map(field => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: field.includes(\"Date\") ? \"datetime-local\" : \"text\",\n      name: field,\n      placeholder: field.replace(/_/g, \" \"),\n      value: formData[field],\n      onChange: handleChange,\n      className: \"w-full p-2 border border-gray-300 rounded\"\n    }, field, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(VF2_ClutchFillingForm, \"rXsrDjZZ0uYylFcwhCoLyyEi0y8=\");\n_c = VF2_ClutchFillingForm;\nexport default VF2_ClutchFillingForm;\nvar _c;\n$RefreshReg$(_c, \"VF2_ClutchFillingForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VF2_ClutchFillingForm","_s","formData","setFormData","Date_Time","CT_VIN","CT_VC","CT_Pressure_Build_Actual","CT_Pressure_Stable_Actual","CT_Pressure_Leak_Actual","CT_COA_Vacuum_Actual","CT_Fine_Vacuum_Actual","CT_Vacuum_Actual","CT_Vacuum_Leak_Actual","CT_Filling_Volume_Actual","CT_Filling_Pressure_Actual","CT_Delta_Pressure_Actual","CT_Oil_Fill_Pressure_Actual","CT_Air_Vent_Actual","CT_Process_Time","CT_Result","handleChange","e","target","name","value","handleSubmit","preventDefault","post","alert","error","console","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","field","type","includes","placeholder","replace","onChange","_c","$RefreshReg$"],"sources":["C:/Users/utsav/OneDrive/Desktop/TATA_TRACEABILITY/TML/client/src/components/VF2_ClutchFillingForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst VF2_ClutchFillingForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    Date_Time: \"\",\r\n    CT_VIN: \"\",\r\n    CT_VC: \"\",\r\n    CT_Pressure_Build_Actual: \"\",\r\n    CT_Pressure_Stable_Actual: \"\",\r\n    CT_Pressure_Leak_Actual: \"\",\r\n    CT_COA_Vacuum_Actual: \"\",\r\n    CT_Fine_Vacuum_Actual: \"\",\r\n    CT_Vacuum_Actual: \"\",\r\n    CT_Vacuum_Leak_Actual: \"\",\r\n    CT_Filling_Volume_Actual: \"\",\r\n    CT_Filling_Pressure_Actual: \"\",\r\n    CT_Delta_Pressure_Actual: \"\",\r\n    CT_Oil_Fill_Pressure_Actual: \"\",\r\n    CT_Air_Vent_Actual: \"\",\r\n    CT_Process_Time: \"\",\r\n    CT_Result: \"\",\r\n  });\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"/api/vf2-clutch-filling\", formData);\r\n      alert(\"VF2 Clutch Oil Filling data submitted!\");\r\n    } catch (error) {\r\n      alert(\"Submission failed.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"p-4 bg-white rounded shadow-md space-y-3 w-full max-w-3xl mx-auto\"\r\n    >\r\n      <h2 className=\"text-xl font-bold mb-4\">VF2 - Clutch Oil Filling Form</h2>\r\n      {Object.keys(formData).map((field) => (\r\n        <input\r\n          key={field}\r\n          type={field.includes(\"Date\") ? \"datetime-local\" : \"text\"}\r\n          name={field}\r\n          placeholder={field.replace(/_/g, \" \")}\r\n          value={formData[field]}\r\n          onChange={handleChange}\r\n          className=\"w-full p-2 border border-gray-300 rounded\"\r\n        />\r\n      ))}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VF2_ClutchFillingForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,wBAAwB,EAAE,EAAE;IAC5BC,yBAAyB,EAAE,EAAE;IAC7BC,uBAAuB,EAAE,EAAE;IAC3BC,oBAAoB,EAAE,EAAE;IACxBC,qBAAqB,EAAE,EAAE;IACzBC,gBAAgB,EAAE,EAAE;IACpBC,qBAAqB,EAAE,EAAE;IACzBC,wBAAwB,EAAE,EAAE;IAC5BC,0BAA0B,EAAE,EAAE;IAC9BC,wBAAwB,EAAE,EAAE;IAC5BC,2BAA2B,EAAE,EAAE;IAC/BC,kBAAkB,EAAE,EAAE;IACtBC,eAAe,EAAE,EAAE;IACnBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IACrBnB,WAAW,CAAC;IAAE,GAAGD,QAAQ;IAAE,CAACoB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAE/D,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,yBAAyB,EAAE1B,QAAQ,CAAC;MACrD2B,KAAK,CAAC,wCAAwC,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,KAAK,CAAC,oBAAoB,CAAC;MAC3BE,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE/B,OAAA;IACEiC,QAAQ,EAAEN,YAAa;IACvBO,SAAS,EAAC,mEAAmE;IAAAC,QAAA,gBAE7EnC,OAAA;MAAIkC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxEC,MAAM,CAACC,IAAI,CAACtC,QAAQ,CAAC,CAACuC,GAAG,CAAEC,KAAK,iBAC/B3C,OAAA;MAEE4C,IAAI,EAAED,KAAK,CAACE,QAAQ,CAAC,MAAM,CAAC,GAAG,gBAAgB,GAAG,MAAO;MACzDpB,IAAI,EAAEkB,KAAM;MACZG,WAAW,EAAEH,KAAK,CAACI,OAAO,CAAC,IAAI,EAAE,GAAG,CAAE;MACtCrB,KAAK,EAAEvB,QAAQ,CAACwC,KAAK,CAAE;MACvBK,QAAQ,EAAE1B,YAAa;MACvBY,SAAS,EAAC;IAA2C,GANhDS,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CACF,CAAC,eACFvC,OAAA;MACE4C,IAAI,EAAC,QAAQ;MACbV,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EACvE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACrC,EAAA,CA5DID,qBAAqB;AAAAgD,EAAA,GAArBhD,qBAAqB;AA8D3B,eAAeA,qBAAqB;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}